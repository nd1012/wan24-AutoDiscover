{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-AutoDiscover",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.AutoDiscover.Constants.html": {
    "href": "api/wan24.AutoDiscover.Constants.html",
    "title": "Class Constants | wan24-AutoDiscover",
    "keywords": "Class Constants Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover Assembly: wan24AutoDiscoverShared.dll Syntax public static class Constants Fields | Edit this page View Source RESPONSE_NS POX response node XML namespace Declaration public const string RESPONSE_NS = \"https://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a\" Field Value Type Description string"
  },
  "api/wan24.AutoDiscover.Controllers.DiscoveryController.html": {
    "href": "api/wan24.AutoDiscover.Controllers.DiscoveryController.html",
    "title": "Class DiscoveryController | wan24-AutoDiscover",
    "keywords": "Class DiscoveryController Discovery controller Inheritance object ControllerBase DiscoveryController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Controllers Assembly: wan24AutoDiscover.dll Syntax [ApiController] [Route(\"autodiscover\")] public class DiscoveryController : ControllerBase Remarks Constructor Constructors | Edit this page View Source DiscoveryController(XmlDocumentInstances) Discovery controller Declaration public DiscoveryController(XmlDocumentInstances responses) Parameters Type Name Description XmlDocumentInstances responses Responses Remarks Constructor Fields | Edit this page View Source ACCOUNTTYPE Account type Declaration public const string ACCOUNTTYPE = \"email\" Field Value Type Description string | Edit this page View Source ACCOUNTTYPE_NODE_NAME AccountType node name Declaration public const string ACCOUNTTYPE_NODE_NAME = \"AccountType\" Field Value Type Description string | Edit this page View Source ACCOUNT_NODE_NAME Account node name Declaration public const string ACCOUNT_NODE_NAME = \"Account\" Field Value Type Description string | Edit this page View Source ACTION Action Declaration public const string ACTION = \"settings\" Field Value Type Description string | Edit this page View Source ACTION_NODE_NAME Action node name Declaration public const string ACTION_NODE_NAME = \"Action\" Field Value Type Description string | Edit this page View Source AUTODISCOVER_NODE_NAME Autodiscover node name Declaration public const string AUTODISCOVER_NODE_NAME = \"Autodiscover\" Field Value Type Description string | Edit this page View Source AUTO_DISCOVER_NS Auto discovery XML namespace Declaration public const string AUTO_DISCOVER_NS = \"http://schemas.microsoft.com/exchange/autodiscover/responseschema/2006\" Field Value Type Description string | Edit this page View Source RESPONSE_NODE_NAME Response node name Declaration public const string RESPONSE_NODE_NAME = \"Response\" Field Value Type Description string Methods | Edit this page View Source AutoDiscoverAsync() Auto discovery (POX) Declaration [HttpPost] [Route(\"autodiscover.xml\")] public Task<ContentResult> AutoDiscoverAsync() Returns Type Description Task<ContentResult> XML response"
  },
  "api/wan24.AutoDiscover.Controllers.html": {
    "href": "api/wan24.AutoDiscover.Controllers.html",
    "title": "Namespace wan24.AutoDiscover.Controllers | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover.Controllers Classes DiscoveryController Discovery controller"
  },
  "api/wan24.AutoDiscover.Models.DiscoveryConfig.html": {
    "href": "api/wan24.AutoDiscover.Models.DiscoveryConfig.html",
    "title": "Class DiscoveryConfig | wan24-AutoDiscover",
    "keywords": "Class DiscoveryConfig Discovery configuration Inheritance object DiscoveryConfig Implements IEquatable<DiscoveryConfig> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public record DiscoveryConfig : IEquatable<DiscoveryConfig> Constructors | Edit this page View Source DiscoveryConfig() Constructor Declaration public DiscoveryConfig() Properties | Edit this page View Source DiscoveryType Discovery configuration type Declaration [JsonIgnore] public Type DiscoveryType { get; } Property Value Type Description Type | Edit this page View Source DiscoveryTypeName Dicovery configuration type name Declaration [StringLength(255, MinimumLength = 1)] public string? DiscoveryTypeName { get; init; } Property Value Type Description string | Edit this page View Source LogFile Logfile path Declaration [StringLength(32767, MinimumLength = 1)] public string? LogFile { get; init; } Property Value Type Description string | Edit this page View Source PreForkResponses Number of POX XML responses to pre-fork Declaration [Range(1, 2147483647)] public int PreForkResponses { get; init; } Property Value Type Description int Methods | Edit this page View Source GetDiscoveryConfig(IConfigurationRoot) Get the discovery configuration Declaration public FrozenDictionary<string, DomainConfig> GetDiscoveryConfig(IConfigurationRoot config) Parameters Type Name Description IConfigurationRoot config Configuration Returns Type Description FrozenDictionary<string, DomainConfig> Discovery configuration Implements IEquatable<T>"
  },
  "api/wan24.AutoDiscover.Models.DomainConfig.html": {
    "href": "api/wan24.AutoDiscover.Models.DomainConfig.html",
    "title": "Class DomainConfig | wan24-AutoDiscover",
    "keywords": "Class DomainConfig Domain configuration Inheritance object DomainConfig Implements IEquatable<DomainConfig> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public record DomainConfig : IEquatable<DomainConfig> Constructors | Edit this page View Source DomainConfig() Constructor Declaration public DomainConfig() Properties | Edit this page View Source AcceptedDomains Accepted domain names Declaration [ItemRegularExpression(\"^[a-z|-|\\\\.]{1,256}$\", ItemValidationTargets.Item)] public HashSet<string>? AcceptedDomains { get; init; } Property Value Type Description HashSet<string> | Edit this page View Source Protocols Protocols Declaration [CountLimit(1, 2147483647)] public virtual required HashSet<Protocol> Protocols { get; init; } Property Value Type Description HashSet<Protocol> | Edit this page View Source Registered Registered domains (key is the served domain name) Declaration public static IReadOnlyDictionary<string, DomainConfig> Registered { get; set; } Property Value Type Description IReadOnlyDictionary<string, DomainConfig> Methods | Edit this page View Source CreateXml(XmlDocument, XmlNode, string[]) Create XML Declaration public virtual void CreateXml(XmlDocument xml, XmlNode account, string[] emailParts) Parameters Type Name Description XmlDocument xml XML XmlNode account Account node string[] emailParts Splitted email parts Implements IEquatable<T>"
  },
  "api/wan24.AutoDiscover.Models.Protocol.LoginName_Delegate.html": {
    "href": "api/wan24.AutoDiscover.Models.Protocol.LoginName_Delegate.html",
    "title": "Delegate Protocol.LoginName_Delegate | wan24-AutoDiscover",
    "keywords": "Delegate Protocol.LoginName_Delegate Delegate for a login name getter Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public delegate string Protocol.LoginName_Delegate(XmlDocument xml, XmlNode account, string[] emailParts, Protocol protocol) Parameters Type Name Description XmlDocument xml XML XmlNode account Account node string[] emailParts Splitted email parts Protocol protocol Protocol Returns Type Description string Login name"
  },
  "api/wan24.AutoDiscover.Models.Protocol.html": {
    "href": "api/wan24.AutoDiscover.Models.Protocol.html",
    "title": "Class Protocol | wan24-AutoDiscover",
    "keywords": "Class Protocol Protocol (POX) Inheritance object Protocol Implements IEquatable<Protocol> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public record Protocol : IEquatable<Protocol> Constructors | Edit this page View Source Protocol() Constructor Declaration public Protocol() Properties | Edit this page View Source AuthRequired Authentication required Declaration public bool AuthRequired { get; init; } Property Value Type Description bool | Edit this page View Source LoginName Login name getter delegate Declaration public static Protocol.LoginName_Delegate LoginName { get; set; } Property Value Type Description Protocol.LoginName_Delegate | Edit this page View Source LoginNameIsEmailAlias If the login name is the alias of the email address Declaration public bool LoginNameIsEmailAlias { get; init; } Property Value Type Description bool | Edit this page View Source Port Port Declaration [Range(1, 65535)] public int Port { get; init; } Property Value Type Description int | Edit this page View Source SPA Secure password authentication Declaration public bool SPA { get; init; } Property Value Type Description bool | Edit this page View Source SSL SSL Declaration public bool SSL { get; init; } Property Value Type Description bool | Edit this page View Source Server Server Declaration [RegularExpression(\"^[a-z|-|\\\\.]{1,256}$\")] public required string Server { get; init; } Property Value Type Description string | Edit this page View Source Type Type Declaration [Required] public required string Type { get; init; } Property Value Type Description string Methods | Edit this page View Source CreateXml(XmlDocument, XmlNode, string[]) Create XML Declaration public virtual void CreateXml(XmlDocument xml, XmlNode account, string[] emailParts) Parameters Type Name Description XmlDocument xml XML XmlNode account Account node string[] emailParts Splitted email parts Implements IEquatable<T>"
  },
  "api/wan24.AutoDiscover.Models.html": {
    "href": "api/wan24.AutoDiscover.Models.html",
    "title": "Namespace wan24.AutoDiscover.Models | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover.Models Classes DiscoveryConfig Discovery configuration DomainConfig Domain configuration Protocol Protocol (POX) Delegates Protocol.LoginName_Delegate Delegate for a login name getter"
  },
  "api/wan24.AutoDiscover.Services.CommandLineInterface.html": {
    "href": "api/wan24.AutoDiscover.Services.CommandLineInterface.html",
    "title": "Class CommandLineInterface | wan24-AutoDiscover",
    "keywords": "Class CommandLineInterface CLI API Inheritance object CommandLineInterface Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Services Assembly: wan24AutoDiscover.dll Syntax [CliApi(\"autodiscover\", false)] public class CommandLineInterface Constructors | Edit this page View Source CommandLineInterface() Constructor Declaration public CommandLineInterface() Methods | Edit this page View Source CreateSystemdServiceAsync() Create service information Declaration [CliApi(\"systemd\", false, IsDefault = true)] [StdOut(\"/etc/systemd/system/autodiscover.service\", false)] public static Task CreateSystemdServiceAsync() Returns Type Description Task"
  },
  "api/wan24.AutoDiscover.Services.ConfigChangeEventThrottle.ConfigChange_Delegate.html": {
    "href": "api/wan24.AutoDiscover.Services.ConfigChangeEventThrottle.ConfigChange_Delegate.html",
    "title": "Delegate ConfigChangeEventThrottle.ConfigChange_Delegate | wan24-AutoDiscover",
    "keywords": "Delegate ConfigChangeEventThrottle.ConfigChange_Delegate Delegate for the OnConfigChange event Namespace: wan24.AutoDiscover.Services Assembly: wan24AutoDiscover.dll Syntax public delegate void ConfigChangeEventThrottle.ConfigChange_Delegate()"
  },
  "api/wan24.AutoDiscover.Services.ConfigChangeEventThrottle.html": {
    "href": "api/wan24.AutoDiscover.Services.ConfigChangeEventThrottle.html",
    "title": "Class ConfigChangeEventThrottle | wan24-AutoDiscover",
    "keywords": "Class ConfigChangeEventThrottle Configuration changed event throttle Inheritance object DisposableBase EventThrottle ConfigChangeEventThrottle Implements IWillDispose IEventThrottle IDisposableObject IDisposable IAsyncDisposable Inherited Members EventThrottle.Raise() EventThrottle.SyncObject EventThrottle.Timeout EventThrottle.LastRaised EventThrottle.RaisedTime EventThrottle.RaisedCount EventThrottle.TotalRaisedCount EventThrottle.TotalThrottledRaisedCount EventThrottle.FirstRaised EventThrottle.IsThrottling DisposableBase.RegisterForDispose<T>(in T) DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Services Assembly: wan24AutoDiscover.dll Syntax public sealed class ConfigChangeEventThrottle : EventThrottle, IWillDispose, IEventThrottle, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source ConfigChangeEventThrottle() Constructor Declaration public ConfigChangeEventThrottle() Methods | Edit this page View Source HandleEvent(in DateTime, in int) Handle the event Declaration protected override void HandleEvent(in DateTime raised, in int raisedCount) Parameters Type Name Description DateTime raised First raised time int raisedCount Raised count Overrides EventThrottle.HandleEvent(in DateTime, in int) Events | Edit this page View Source OnConfigChange Raised on configuration changes Declaration public static event ConfigChangeEventThrottle.ConfigChange_Delegate? OnConfigChange Event Type Type Description ConfigChangeEventThrottle.ConfigChange_Delegate Implements wan24.Core.IWillDispose wan24.Core.IEventThrottle wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.AutoDiscover.Services.ExceptionHandler.html": {
    "href": "api/wan24.AutoDiscover.Services.ExceptionHandler.html",
    "title": "Class ExceptionHandler | wan24-AutoDiscover",
    "keywords": "Class ExceptionHandler Exception handler Inheritance object ExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Services Assembly: wan24AutoDiscover.dll Syntax public sealed class ExceptionHandler : IExceptionHandler Constructors | Edit this page View Source ExceptionHandler() Constructor Declaration public ExceptionHandler() Methods | Edit this page View Source TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. Declaration public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters Type Name Description HttpContext httpContext The HttpContext for the request. Exception exception The unhandled exception. CancellationToken cancellationToken The cancellation token. Returns Type Description ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false. Implements IExceptionHandler"
  },
  "api/wan24.AutoDiscover.Services.XmlDocumentInstances.html": {
    "href": "api/wan24.AutoDiscover.Services.XmlDocumentInstances.html",
    "title": "Class XmlDocumentInstances | wan24-AutoDiscover",
    "keywords": "Class XmlDocumentInstances XmlDocument response instance pool Inheritance object DisposableBase HostedServiceBase InstancePool<XmlDocument> XmlDocumentInstances Implements IWillDispose IInstancePool<XmlDocument> IInstancePool IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members InstancePool<XmlDocument>.GetOne() InstancePool<XmlDocument>.GetOneAsync(CancellationToken) InstancePool<XmlDocument>.GetMany(int, CancellationToken) InstancePool<XmlDocument>.GetManyAsync(int, CancellationToken) InstancePool<XmlDocument>.GUID InstancePool<XmlDocument>.ServiceProvider InstancePool<XmlDocument>.Capacity InstancePool<XmlDocument>.Available InstancePool<XmlDocument>.Created InstancePool<XmlDocument>.CreatedOnDemand InstancePool<XmlDocument>.State HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.OnException DisposableBase.RegisterForDispose<T>(in T) DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: wan24.AutoDiscover.Services Assembly: wan24AutoDiscover.dll Syntax public sealed class XmlDocumentInstances : InstancePool<XmlDocument>, IWillDispose, IInstancePool<XmlDocument>, IInstancePool, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Remarks Constructor Constructors | Edit this page View Source XmlDocumentInstances() Constructor Declaration public XmlDocumentInstances() | Edit this page View Source XmlDocumentInstances(in int) XmlDocument response instance pool Declaration public XmlDocumentInstances(in int capacity) Parameters Type Name Description int capacity Capacity Remarks Constructor Implements wan24.Core.IWillDispose wan24.Core.IInstancePool<T> wan24.Core.IInstancePool wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider"
  },
  "api/wan24.AutoDiscover.Services.html": {
    "href": "api/wan24.AutoDiscover.Services.html",
    "title": "Namespace wan24.AutoDiscover.Services | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover.Services Classes CommandLineInterface CLI API ConfigChangeEventThrottle Configuration changed event throttle ExceptionHandler Exception handler XmlDocumentInstances XmlDocument response instance pool Delegates ConfigChangeEventThrottle.ConfigChange_Delegate Delegate for the OnConfigChange event"
  },
  "api/wan24.AutoDiscover.html": {
    "href": "api/wan24.AutoDiscover.html",
    "title": "Namespace wan24.AutoDiscover | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover Classes Constants Constants"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | wan24-AutoDiscover",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-AutoDiscover | wan24-AutoDiscover",
    "keywords": "wan24-AutoDiscover This is a micro-webservice which supports a small part of the Microsoft Exchange POX autodiscover standard, which allows email clients to receive automatic configuration information for an email account. It was created using .NET 8 and ASP.NET. You find a published release build for each published release on GitHub as ZIP download for self-hosting. Usage appsettings.json The appsettings.json file contains the webservice configuration. The DiscoveryConfig is a wan24.AutoDiscovery.Models.DiscoveryConfig object. An example: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"Kestrel\": { \"Endpoints\": { \"AutoDiscover\": { \"Url\": \"http://localhost:5000\" } } }, \"AllowedHosts\": \"*\", \"DiscoveryConfig\": { \"PreForkResponses\": 10, \"Discovery\": { \"localhost\": { \"AcceptedDomains\": [ \"wan24.de\", \"wan-solutions.de\" ], \"Protocols\": [ { \"Type\": \"IMAP\", \"Server\": \"imap.wan24.de\", \"Port\": 993 }, { \"Type\": \"SMTP\", \"Server\": \"smtp.wan24.de\", \"Port\": 587 } ] } } } } Since the webservice should only listen local and be proxied by a real webserver (like Apache2), there is a wan24.AutoDiscover.Models.DomainConfig for localhost, which produces POX response for the allowed domains wan24.de and wan-solutions.de in this example (you should use your own domain names instead). The email client configuration will get an IMAP and a SMTP server pre- configuration, which contains the alias of the requested email address as login name and has all the other defaults from a wan24.AutoDiscover.Models.Protocol instance. With the PreForkResponses value you can define a number of pre-forked POX response XML documents to serve faster responses. Any change to this file will cause an automatic reload of the DomainConfig section. For serving a request, the DomainConfig will be looked up by the email address domain part by the served request hostname by any DomainConfig which has the email address domain part in the AcceptedDomains property, which contains a list of accepted domain names by the DomainConfig with an empty domain name as key Any unmatched DomainConfig will cause a Bad request http response. Documentation references: DiscoveryConfig DomainConfig Protocol Apache2 proxy setup Create the file /etc/apache2/sites-available/autodiscover.conf: <VirtualHost [IP]:443> ServerName [DOMAIN] SSLEngine on SSLCertificateFile /etc/letsencrypt/live/[DOMAIN]/fullchain.pem SSLCertificateKeyFile /etc/letsencrypt/[DOMAIN]/privkey.pem ProxyPreserveHost On ProxyPass / http://localhost:5000/ ProxyPassReverse / http://localhost:5000/ RewriteEngine on RewriteCond %{SERVER_NAME} =[DOMAIN] RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent] </VirtualHost> Replace [IP] with your servers public IP address and [DOMAIN] with your domain name which you'd like to use for serving autodiscover. Then activate the proxy: a2enmod rewrite proxy a2ensite autodiscover systemctl restart apache2 Run as systemd service On a Debian Linux host you can run the wan24-AutoDiscover microservice using systemd: dotnet wan24AutoDiscover.dll autodiscover systemd > /etc/systemd/system/autodiscover.service systemctl enable autodiscover systemctl start autodiscover systemctl status autodiscover Required DNS configuration In order to make autodiscover working in an email client, you'll need to create a SRV record for your email domain - example: _autodiscover._tcp 1D IN SRV 0 0 443 [MTA-DOMAIN]. The domain wan24.de uses this record, for example: _autodiscover._tcp 1D IN SRV 0 0 443 mail.wan24.de. POX request and response This is an example POX request to /autodiscover/autodiscover.xml: <Autodiscover xmlns=\"https://schemas.microsoft.com/exchange/autodiscover/outlook/requestschema/2006\"> <Request> <EMailAddress>alias@wan24.de</EMailAddress> <AcceptableResponseSchema>https://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a</AcceptableResponseSchema> </Request> </Autodiscover> The response with the demo appsettings.json: <Autodiscover xmlns=\"http://schemas.microsoft.com/exchange/autodiscover/responseschema/2006\"> <Response xmlns=\"https://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a\"> <Account> <AccountType>email</AccountType> <Action>settings</Action> <Protocol> <Type>IMAP</Type> <Server>imap.wan24.de</Server> <Port>993</Port> <LoginName>alias</LoginName> <SPA>off</SPA> <SSL>on</SSL> <AuthRequired>on</AuthRequired> </Protocol> <Protocol> <Type>SMTP</Type> <Server>smtp.wan24.de</Server> <Port>587</Port> <LoginName>alias</LoginName> <SPA>off</SPA> <SSL>on</SSL> <AuthRequired>on</AuthRequired> </Protocol> </Account> </Response> </Autodiscover> CLI API The wan24-AutoDiscover has a small built in CLI API, which can do some things for you: Create a systemd service file dotnet wan24AutoDiscover.dll autodiscover systemd > /etc/systemd/system/autodiscover.service"
  }
}