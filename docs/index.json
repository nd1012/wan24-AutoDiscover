{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-AutoDiscover",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.AutoDiscover.Constants.html": {
    "href": "api/wan24.AutoDiscover.Constants.html",
    "title": "Class Constants | wan24-AutoDiscover",
    "keywords": "Class Constants Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover Assembly: wan24AutoDiscoverShared.dll Syntax public static class Constants Fields | Edit this page View Source ACCOUNTTYPE Account type Declaration public const string ACCOUNTTYPE = \"email\" Field Value Type Description string | Edit this page View Source ACCOUNTTYPE_NODE_NAME AccountType node name Declaration public const string ACCOUNTTYPE_NODE_NAME = \"AccountType\" Field Value Type Description string | Edit this page View Source ACCOUNT_NODE_NAME Account node name Declaration public const string ACCOUNT_NODE_NAME = \"Account\" Field Value Type Description string | Edit this page View Source ACTION Action Declaration public const string ACTION = \"settings\" Field Value Type Description string | Edit this page View Source ACTION_NODE_NAME Action node name Declaration public const string ACTION_NODE_NAME = \"Action\" Field Value Type Description string | Edit this page View Source AUTODISCOVER_NODE_NAME Autodiscover node name Declaration public const string AUTODISCOVER_NODE_NAME = \"Autodiscover\" Field Value Type Description string | Edit this page View Source AUTO_DISCOVER_NS Auto discovery XML namespace Declaration public const string AUTO_DISCOVER_NS = \"http://schemas.microsoft.com/exchange/autodiscover/responseschema/2006\" Field Value Type Description string | Edit this page View Source RESPONSE_NODE_NAME Response node name Declaration public const string RESPONSE_NODE_NAME = \"Response\" Field Value Type Description string | Edit this page View Source RESPONSE_NS POX response node XML namespace Declaration public const string RESPONSE_NS = \"https://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a\" Field Value Type Description string"
  },
  "api/wan24.AutoDiscover.Controllers.DiscoveryController.html": {
    "href": "api/wan24.AutoDiscover.Controllers.DiscoveryController.html",
    "title": "Class DiscoveryController | wan24-AutoDiscover",
    "keywords": "Class DiscoveryController Discovery controller Inheritance object ControllerBase DiscoveryController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Controllers Assembly: wan24AutoDiscover.dll Syntax [ApiController] [Route(\"autodiscover\")] public sealed class DiscoveryController : ControllerBase Remarks Constructor Constructors | Edit this page View Source DiscoveryController(InstancePool<XmlResponse>) Discovery controller Declaration public DiscoveryController(InstancePool<XmlResponse> responses) Parameters Type Name Description InstancePool<XmlResponse> responses Responses Remarks Constructor Methods | Edit this page View Source AutoDiscoverAsync() Autodiscover (POX request body required) Declaration [HttpPost(\"autodiscover.xml\")] [Consumes(\"application/xml\", new string[] { }, IsOptional = false)] [RequestSizeLimit(510)] [Produces(\"application/xml\", new string[] { })] public Task AutoDiscoverAsync() Returns Type Description Task POX response"
  },
  "api/wan24.AutoDiscover.Controllers.html": {
    "href": "api/wan24.AutoDiscover.Controllers.html",
    "title": "Namespace wan24.AutoDiscover.Controllers | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover.Controllers Classes DiscoveryController Discovery controller"
  },
  "api/wan24.AutoDiscover.Models.DiscoveryConfig.html": {
    "href": "api/wan24.AutoDiscover.Models.DiscoveryConfig.html",
    "title": "Class DiscoveryConfig | wan24-AutoDiscover",
    "keywords": "Class DiscoveryConfig Discovery configuration Inheritance object ValidatableRecordBase DiscoveryConfig Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IEquatable<DiscoveryConfig> Inherited Members ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) ValidatableRecordBase.ToString() ValidatableRecordBase.PrintMembers(StringBuilder) ValidatableRecordBase.GetHashCode() ValidatableRecordBase.Equals(object) ValidatableRecordBase.Equals(ValidatableRecordBase) ValidatableRecordBase.<Clone>$() ValidatableRecordBase.EqualityContract object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public record DiscoveryConfig : ValidatableRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IEquatable<DiscoveryConfig> Remarks Constructor Constructors | Edit this page View Source DiscoveryConfig() Discovery configuration Declaration public DiscoveryConfig() Remarks Constructor Fields | Edit this page View Source _DiscoveryType Discovery configuration type Declaration protected Type? _DiscoveryType Field Value Type Description Type Properties | Edit this page View Source Current Current configuration Declaration public static DiscoveryConfig Current { get; set; } Property Value Type Description DiscoveryConfig | Edit this page View Source DiscoveryType Discovery configuration type Declaration [JsonIgnore] public virtual Type DiscoveryType { get; } Property Value Type Description Type | Edit this page View Source DiscoveryTypeName Discovery configuration type name Declaration [StringLength(255, MinimumLength = 1)] public string? DiscoveryTypeName { get; init; } Property Value Type Description string | Edit this page View Source EmailMappings JSON file path which contains the email mappings list Declaration [StringLength(32767, MinimumLength = 1)] public string? EmailMappings { get; init; } Property Value Type Description string | Edit this page View Source KnownProxies Known http proxies Declaration public IReadOnlySet<IPAddress> KnownProxies { get; init; } Property Value Type Description IReadOnlySet<IPAddress> | Edit this page View Source LogFile Logfile path Declaration [StringLength(32767, MinimumLength = 1)] public string? LogFile { get; init; } Property Value Type Description string | Edit this page View Source PreForkResponses Number of POX XML responses to pre-fork Declaration [Range(1, 2147483647)] public int PreForkResponses { get; init; } Property Value Type Description int | Edit this page View Source PreReloadCommand Command to execute (and optional arguments) before reloading the configuration Declaration [CountLimit(1, 255)] [ItemStringLength(32767, ItemValidationTargets.Item)] public string[]? PreReloadCommand { get; init; } Property Value Type Description string[] | Edit this page View Source WatchEmailMappings Watch email mappings list file changes for reloading the configuration? Declaration public bool WatchEmailMappings { get; init; } Property Value Type Description bool | Edit this page View Source WatchFiles Additional file paths to watch for an automatic configuration reload Declaration [CountLimit(1, 255)] [ItemStringLength(32767, ItemValidationTargets.Item)] public string[]? WatchFiles { get; init; } Property Value Type Description string[] Methods | Edit this page View Source GetDiscoveryConfigAsync(IConfigurationRoot, CancellationToken) Get the discovery configuration Declaration public virtual Task<IReadOnlyDictionary<string, DomainConfig>> GetDiscoveryConfigAsync(IConfigurationRoot config, CancellationToken cancellationToken = default) Parameters Type Name Description IConfigurationRoot config Configuration CancellationToken cancellationToken Cancellation token Returns Type Description Task<IReadOnlyDictionary<string, DomainConfig>> Discovery configuration Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> IEquatable<T>"
  },
  "api/wan24.AutoDiscover.Models.DomainConfig.html": {
    "href": "api/wan24.AutoDiscover.Models.DomainConfig.html",
    "title": "Class DomainConfig | wan24-AutoDiscover",
    "keywords": "Class DomainConfig Domain configuration Inheritance object ValidatableRecordBase DomainConfig Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IEquatable<DomainConfig> Inherited Members ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) ValidatableRecordBase.ToString() ValidatableRecordBase.PrintMembers(StringBuilder) ValidatableRecordBase.GetHashCode() ValidatableRecordBase.Equals(object) ValidatableRecordBase.Equals(ValidatableRecordBase) ValidatableRecordBase.<Clone>$() ValidatableRecordBase.EqualityContract object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public record DomainConfig : ValidatableRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IEquatable<DomainConfig> Remarks Constructor Constructors | Edit this page View Source DomainConfig() Domain configuration Declaration public DomainConfig() Remarks Constructor Properties | Edit this page View Source AcceptedDomains Accepted domain names Declaration [CountLimit(1, 2147483647)] [ItemRegularExpression(\"^[a-z|-|\\\\.]{1,256}$\", ItemValidationTargets.Item)] public IReadOnlyList<string>? AcceptedDomains { get; init; } Property Value Type Description IReadOnlyList<string> | Edit this page View Source LoginNameMapping Login name mapping (key is the email address or alias, value the mapped login name) Declaration [RequiredIf(\"LoginNameMappingRequired\", new object?[] { true })] public Dictionary<string, string>? LoginNameMapping { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source LoginNameMappingRequired If a successful login name mapping is required (if no mapping was possible, the email address will be used as login name) Declaration public bool LoginNameMappingRequired { get; init; } Property Value Type Description bool | Edit this page View Source Protocols Protocols Declaration [CountLimit(1, 255)] public required IReadOnlyList<Protocol> Protocols { get; init; } Property Value Type Description IReadOnlyList<Protocol> | Edit this page View Source Registered Registered domains (key is the served domain name) Declaration public static IReadOnlyDictionary<string, DomainConfig> Registered { get; set; } Property Value Type Description IReadOnlyDictionary<string, DomainConfig> Methods | Edit this page View Source CreateXml(XmlWriter, ReadOnlyMemory<string>) Create XML Declaration public virtual void CreateXml(XmlWriter xml, ReadOnlyMemory<string> emailParts) Parameters Type Name Description XmlWriter xml XML ReadOnlyMemory<string> emailParts Splitted email parts | Edit this page View Source GetConfig(string, ReadOnlyMemory<string>) Get a domain configuration which matches an email address Declaration public static DomainConfig? GetConfig(string host, ReadOnlyMemory<string> emailParts) Parameters Type Name Description string host Hostname ReadOnlyMemory<string> emailParts Splitted email parts Returns Type Description DomainConfig Domain configuration Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> IEquatable<T>"
  },
  "api/wan24.AutoDiscover.Models.EmailMapping.html": {
    "href": "api/wan24.AutoDiscover.Models.EmailMapping.html",
    "title": "Class EmailMapping | wan24-AutoDiscover",
    "keywords": "Class EmailMapping Email mapping Inheritance object ValidatableRecordBase EmailMapping Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IEquatable<EmailMapping> Inherited Members ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) ValidatableRecordBase.ToString() ValidatableRecordBase.PrintMembers(StringBuilder) ValidatableRecordBase.GetHashCode() ValidatableRecordBase.Equals(object) ValidatableRecordBase.Equals(ValidatableRecordBase) ValidatableRecordBase.<Clone>$() ValidatableRecordBase.EqualityContract object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public record EmailMapping : ValidatableRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IEquatable<EmailMapping> Remarks Constructor Constructors | Edit this page View Source EmailMapping() Email mapping Declaration public EmailMapping() Remarks Constructor Properties | Edit this page View Source Email Email address Declaration [EmailAddress] public required string Email { get; init; } Property Value Type Description string | Edit this page View Source Targets Target email addresses or user names Declaration [CountLimit(1, 2147483647)] [ItemStringLength(255, ItemValidationTargets.Item)] public required IReadOnlyList<string> Targets { get; init; } Property Value Type Description IReadOnlyList<string> Methods | Edit this page View Source GetLoginUser(IEnumerable<EmailMapping>, string) Get the login user from email mappings for an email address Declaration public static string? GetLoginUser(IEnumerable<EmailMapping> mappings, string email) Parameters Type Name Description IEnumerable<EmailMapping> mappings Mappings string email Email address Returns Type Description string Login user Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> IEquatable<T>"
  },
  "api/wan24.AutoDiscover.Models.Protocol.LoginName_Delegate.html": {
    "href": "api/wan24.AutoDiscover.Models.Protocol.LoginName_Delegate.html",
    "title": "Delegate Protocol.LoginName_Delegate | wan24-AutoDiscover",
    "keywords": "Delegate Protocol.LoginName_Delegate Delegate for a login name resolver Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public delegate string Protocol.LoginName_Delegate(ReadOnlyMemory<string> emailParts, DomainConfig domain, Protocol protocol) Parameters Type Name Description ReadOnlyMemory<string> emailParts Splitted email parts DomainConfig domain Domain Protocol protocol Protocol Returns Type Description string Login name"
  },
  "api/wan24.AutoDiscover.Models.Protocol.html": {
    "href": "api/wan24.AutoDiscover.Models.Protocol.html",
    "title": "Class Protocol | wan24-AutoDiscover",
    "keywords": "Class Protocol Protocol (POX) Inheritance object ValidatableRecordBase Protocol Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IEquatable<Protocol> Inherited Members ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) ValidatableRecordBase.ToString() ValidatableRecordBase.PrintMembers(StringBuilder) ValidatableRecordBase.GetHashCode() ValidatableRecordBase.Equals(object) ValidatableRecordBase.Equals(ValidatableRecordBase) ValidatableRecordBase.<Clone>$() ValidatableRecordBase.EqualityContract object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.AutoDiscover.Models Assembly: wan24AutoDiscoverShared.dll Syntax public record Protocol : ValidatableRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IEquatable<Protocol> Remarks Constructor Constructors | Edit this page View Source Protocol() Protocol (POX) Declaration public Protocol() Remarks Constructor Fields | Edit this page View Source AUTHREQUIRED_NODE_NAME AuthRequired node name Declaration protected const string AUTHREQUIRED_NODE_NAME = \"AuthRequired\" Field Value Type Description string | Edit this page View Source LOGINNAME_NODE_NAME LoginName node name Declaration protected const string LOGINNAME_NODE_NAME = \"LoginName\" Field Value Type Description string | Edit this page View Source OFF OFF Declaration protected const string OFF = \"off\" Field Value Type Description string | Edit this page View Source ON ON Declaration protected const string ON = \"on\" Field Value Type Description string | Edit this page View Source PORT_NODE_NAME Port node name Declaration protected const string PORT_NODE_NAME = \"Port\" Field Value Type Description string | Edit this page View Source PROTOCOL_NODE_NAME Protocol node name Declaration protected const string PROTOCOL_NODE_NAME = \"Protocol\" Field Value Type Description string | Edit this page View Source SERVER_NODE_NAME Server node name Declaration protected const string SERVER_NODE_NAME = \"Server\" Field Value Type Description string | Edit this page View Source SPA_NODE_NAME SPA node name Declaration protected const string SPA_NODE_NAME = \"SPA\" Field Value Type Description string | Edit this page View Source SSL_NODE_NAME SSL node name Declaration protected const string SSL_NODE_NAME = \"SSL\" Field Value Type Description string | Edit this page View Source TYPE_NODE_NAME Type node name Declaration protected const string TYPE_NODE_NAME = \"Type\" Field Value Type Description string Properties | Edit this page View Source AuthRequired Authentication required Declaration public bool AuthRequired { get; init; } Property Value Type Description bool | Edit this page View Source LoginName Login name getter delegate Declaration public static Protocol.LoginName_Delegate LoginName { get; set; } Property Value Type Description Protocol.LoginName_Delegate | Edit this page View Source LoginNameIsEmailAlias If the login name is the alias of the email address Declaration public bool LoginNameIsEmailAlias { get; init; } Property Value Type Description bool | Edit this page View Source LoginNameMapping Login name mapping (key is the email address or alias, value the mapped login name) Declaration [RequiredIf(\"LoginNameMappingRequired\", new object?[] { true })] public IReadOnlyDictionary<string, string>? LoginNameMapping { get; init; } Property Value Type Description IReadOnlyDictionary<string, string> | Edit this page View Source LoginNameMappingRequired If a successful login name mapping is required (if no mapping was possible, the email address will be used as login name) Declaration public bool LoginNameMappingRequired { get; init; } Property Value Type Description bool | Edit this page View Source Port Port Declaration [Range(1, 65535)] public int Port { get; init; } Property Value Type Description int | Edit this page View Source SPA Secure password authentication Declaration public bool SPA { get; init; } Property Value Type Description bool | Edit this page View Source SSL SSL Declaration public bool SSL { get; init; } Property Value Type Description bool | Edit this page View Source Server Server Declaration [Host] public required string Server { get; init; } Property Value Type Description string | Edit this page View Source Type Type Declaration [Required] [StringLength(255, MinimumLength = 1)] public required string Type { get; init; } Property Value Type Description string Methods | Edit this page View Source CreateXml(XmlWriter, ReadOnlyMemory<string>, DomainConfig) Create XML Declaration public virtual void CreateXml(XmlWriter xml, ReadOnlyMemory<string> emailParts, DomainConfig domain) Parameters Type Name Description XmlWriter xml XML ReadOnlyMemory<string> emailParts Splitted email parts DomainConfig domain Domain | Edit this page View Source DefaultLoginName(ReadOnlyMemory<string>, DomainConfig, Protocol) Default login name resolver Declaration public static string DefaultLoginName(ReadOnlyMemory<string> emailParts, DomainConfig domain, Protocol protocol) Parameters Type Name Description ReadOnlyMemory<string> emailParts Splitted email parts DomainConfig domain Domain Protocol protocol Protocol Returns Type Description string Login name Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> IEquatable<T>"
  },
  "api/wan24.AutoDiscover.Models.html": {
    "href": "api/wan24.AutoDiscover.Models.html",
    "title": "Namespace wan24.AutoDiscover.Models | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover.Models Classes DiscoveryConfig Discovery configuration DomainConfig Domain configuration EmailMapping Email mapping Protocol Protocol (POX) Delegates Protocol.LoginName_Delegate Delegate for a login name resolver"
  },
  "api/wan24.AutoDiscover.Services.CommandLineInterface.html": {
    "href": "api/wan24.AutoDiscover.Services.CommandLineInterface.html",
    "title": "Class CommandLineInterface | wan24-AutoDiscover",
    "keywords": "Class CommandLineInterface CLI API Inheritance object CommandLineInterface Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Services Assembly: wan24AutoDiscover.dll Syntax [CliApi(\"autodiscover\", false)] [DisplayText(\"wan24-AutoDiscover API\")] public sealed class CommandLineInterface Remarks Constructor Constructors | Edit this page View Source CommandLineInterface() CLI API Declaration public CommandLineInterface() Remarks Constructor Methods | Edit this page View Source CreateSystemdServiceAsync(CancellationToken) Create service information Declaration [CliApi(\"systemd\", false)] [DisplayText(\"systemd service\")] [StdOut(\"/etc/systemd/system/autodiscover.service\", false)] public static Task CreateSystemdServiceAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ParsePostfixEmailMappingsAsync(CancellationToken) Parse Postfix email mappings Declaration [CliApi(\"postfix\", false)] [DisplayText(\"Postfix email mapping\")] [StdIn(\"/etc/postfix/virtual\", false)] [StdOut(\"/home/autodiscover/postfix.json\", false)] public static Task ParsePostfixEmailMappingsAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source PostUpgradeAsync(string, string, CancellationToken) Post-upgrade actions Declaration [CliApi(\"post-upgrade\", false)] [DisplayText(\"Post-upgrade\")] public static Task PostUpgradeAsync(string previousVersion, string currentVersion, CancellationToken cancellationToken = default) Parameters Type Name Description string previousVersion Previous version string currentVersion Current version CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source UpgradeAsync(string[]?, string[]?, bool, bool, CancellationToken) Upgrade wan24-AutoDiscover online Declaration [CliApi(\"upgrade\", false)] [DisplayText(\"wan24-AutoDiscover upgrade\")] [ExitCode(2, \"A newer version is available online (used when the \\\"-checkOnly\\\" flag was given)\")] public static Task<int> UpgradeAsync(string[]? preCommand = null, string[]? postCommand = null, bool noUserInteraction = false, bool checkOnly = false, CancellationToken cancellationToken = default) Parameters Type Name Description string[] preCommand Pre-command string[] postCommand Post-command bool noUserInteraction No user interaction? bool checkOnly Check for update only CancellationToken cancellationToken Cancellation token Returns Type Description Task<int> Exit code"
  },
  "api/wan24.AutoDiscover.Services.ExceptionHandler.html": {
    "href": "api/wan24.AutoDiscover.Services.ExceptionHandler.html",
    "title": "Class ExceptionHandler | wan24-AutoDiscover",
    "keywords": "Class ExceptionHandler Exception handler Inheritance object ExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover.Services Assembly: wan24AutoDiscover.dll Syntax public sealed class ExceptionHandler : IExceptionHandler Remarks Constructor Constructors | Edit this page View Source ExceptionHandler() Exception handler Declaration public ExceptionHandler() Remarks Constructor Fields | Edit this page View Source TEXT_MIME_TYPE Text MIME type Declaration public const string TEXT_MIME_TYPE = \"text/plain\" Field Value Type Description string Methods | Edit this page View Source TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. Declaration public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters Type Name Description HttpContext httpContext The HttpContext for the request. Exception exception The unhandled exception. CancellationToken cancellationToken The cancellation token. Returns Type Description ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false. Implements IExceptionHandler"
  },
  "api/wan24.AutoDiscover.Services.html": {
    "href": "api/wan24.AutoDiscover.Services.html",
    "title": "Namespace wan24.AutoDiscover.Services | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover.Services Classes CommandLineInterface CLI API ExceptionHandler Exception handler"
  },
  "api/wan24.AutoDiscover.VersionInfo.html": {
    "href": "api/wan24.AutoDiscover.VersionInfo.html",
    "title": "Class VersionInfo | wan24-AutoDiscover",
    "keywords": "Class VersionInfo Version information Inheritance object VersionInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover Assembly: wan24AutoDiscoverShared.dll Syntax public static class VersionInfo Properties | Edit this page View Source Current Current version Declaration public static Version Current { get; } Property Value Type Description Version"
  },
  "api/wan24.AutoDiscover.XmlResponse.html": {
    "href": "api/wan24.AutoDiscover.XmlResponse.html",
    "title": "Class XmlResponse | wan24-AutoDiscover",
    "keywords": "Class XmlResponse XML response Inheritance object DisposableBase XmlResponse Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeCore() DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.AutoDiscover Assembly: wan24AutoDiscover.dll Syntax public class XmlResponse : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source XmlResponse() Constructor Declaration public XmlResponse() Properties | Edit this page View Source XML XML Declaration public XmlWriter XML { get; } Property Value Type Description XmlWriter | Edit this page View Source XmlOutput XML output Declaration public BlockingBufferStream XmlOutput { get; } Property Value Type Description BlockingBufferStream Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableBase.Dispose(bool) | Edit this page View Source FinalizeXmlOutput() Finalize Declaration public virtual void FinalizeXmlOutput() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.AutoDiscover.html": {
    "href": "api/wan24.AutoDiscover.html",
    "title": "Namespace wan24.AutoDiscover | wan24-AutoDiscover",
    "keywords": "Namespace wan24.AutoDiscover Classes Constants Constants VersionInfo Version information XmlResponse XML response"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | wan24-AutoDiscover",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-AutoDiscover | wan24-AutoDiscover",
    "keywords": "wan24-AutoDiscover This is a micro-webservice which supports a small part of the Microsoft Exchange POX autodiscover standard, which allows email clients to receive automatic configuration information for an email account. It was created using .NET 8 and ASP.NET. You find a published release build for each published release on GitHub as ZIP file download for self-hosting. The webservice is designed for working with dynamic MTA configurations and tries to concentrate on the basics for fast request handling and response. All required informations will be held in memory, so no database or filesystem access is required for request handling. Usage Pre-requirements This app is a .NET 8 app and needs the ASP.NET runtime environment. How to get it For example on a Debian Linux server: mkdir /home/autodiscover cd /home/autodiscover wget https://github.com/nd1012/wan24-AutoDiscover/releases/download/v1.2.0/wan24-AutoDiscover.v1.2.0.zip unzip wan24-AutoDiscover.v1.2.0.zip rm wan24-AutoDiscover.v1.2.0.zip appsettings.json The appsettings.json file contains the webservice configuration. The DiscoveryConfig is a wan24.AutoDiscovery.Models.DiscoveryConfig object. An example: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"Kestrel\": { \"Endpoints\": { \"AutoDiscover\": { \"Url\": \"http://127.0.0.1:5000\" } } }, \"AllowedHosts\": \"*\", \"DiscoveryConfig\": { \"PreForkResponses\": 10, \"KnownProxies\": [ \"127.0.0.1\" ], \"Discovery\": { \"localhost\": { \"AcceptedDomains\": [ \"wan24.de\", \"wan-solutions.de\" ], \"Protocols\": [ { \"Type\": \"IMAP\", \"Server\": \"imap.wan24.de\", \"Port\": 993 }, { \"Type\": \"SMTP\", \"Server\": \"smtp.wan24.de\", \"Port\": 587 } ] } } } } Since the webservice should only listen local and be proxied by a real webserver (like Apache2), there is a wan24.AutoDiscover.Models.DomainConfig for localhost, which produces POX response for the allowed domains wan24.de and wan-solutions.de in this example (you should use your own domain names instead). The email client configuration will get an IMAP and a SMTP server pre- configuration, which contains the alias of the requested email address as login name and has all the other defaults from a wan24.AutoDiscover.Models.Protocol instance. With the PreForkResponses value you can define a number of pre-forked POX response XML documents to serve faster responses. Any change to this file will cause an automatic reload of the DomainConfig section. For serving a request, the DomainConfig will be looked up by the email address domain part by the served request hostname by any DomainConfig which has the email address domain part in the AcceptedDomains property, which contains a list of accepted domain names by the DomainConfig with an empty domain name as key Any unmatched DomainConfig will cause a Bad request http response. Find the online documentation of the used types here: DiscoveryConfig DomainConfig Protocol Run as systemd service On a Debian Linux host you can run the wan24-AutoDiscover microservice using systemd: dotnet wan24AutoDiscover.dll autodiscover systemd > /etc/systemd/system/autodiscover.service systemctl enable autodiscover systemctl start autodiscover systemctl status autodiscover Apache2 proxy setup Create the file /etc/apache2/sites-available/autodiscover.conf: <VirtualHost [IP]:443> ServerName [DOMAIN] SSLEngine on SSLCertificateFile /path/to/fullchain.pem SSLCertificateKeyFile /path/to/privkey.pem ProxyPreserveHost On ProxyPass / http://127.0.0.1:5000/ ProxyPassReverse / http://127.0.0.1:5000/ </VirtualHost> Replace [IP] with your servers public IP address and [DOMAIN] with your domain name which you'd like to use for serving autodiscover. Then activate the proxy: a2enmod proxy a2ensite autodiscover systemctl restart apache2 POX request and response This is an example POX request to /autodiscover/autodiscover.xml: <Autodiscover xmlns=\"https://schemas.microsoft.com/exchange/autodiscover/outlook/requestschema/2006\"> <Request> <EMailAddress>alias@wan24.de</EMailAddress> <AcceptableResponseSchema>https://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a</AcceptableResponseSchema> </Request> </Autodiscover> The response with the demo appsettings.json: <Autodiscover xmlns=\"http://schemas.microsoft.com/exchange/autodiscover/responseschema/2006\"> <Response xmlns=\"https://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a\"> <Account> <AccountType>email</AccountType> <Action>settings</Action> <Protocol> <Type>IMAP</Type> <Server>imap.wan24.de</Server> <Port>993</Port> <LoginName>alias</LoginName> <SPA>off</SPA> <SSL>on</SSL> <AuthRequired>on</AuthRequired> </Protocol> <Protocol> <Type>SMTP</Type> <Server>smtp.wan24.de</Server> <Port>587</Port> <LoginName>alias</LoginName> <SPA>off</SPA> <SSL>on</SSL> <AuthRequired>on</AuthRequired> </Protocol> </Account> </Response> </Autodiscover> Required DNS configuration In order to make autodiscover working in an email client, you'll need to create a SRV record for your email domain - example: _autodiscover._tcp 1D IN SRV 0 0 443 [MTA-DOMAIN]. The domain wan24.de uses this record, for example: _autodiscover._tcp 1D IN SRV 0 0 443 mail.wan24.de. CLI API The wan24-AutoDiscover has a small built in CLI API, which can do some things for you: Create a systemd service file dotnet wan24AutoDiscover.dll autodiscover systemd > /etc/systemd/system/autodiscover.service Parse a Postfix virtual configuration file dotnet wan24AutoDiscover.dll autodiscover postfix < /etc/postfix/virtual > /home/autodiscover/postfix.json Display version number dotnet wan24AutoDiscover.dll autodiscover version Upgrade online Check for an available newer version only: dotnet wan24AutoDiscover.dll autodiscover upgrade -checkOnly NOTE: The command will exit with code #2, if an update is available online. Upgrade with user interaction: dotnet wan24AutoDiscover.dll autodiscover upgrade Upgrade without user interaction: dotnet wan24AutoDiscover.dll autodiscover upgrade -noUserInteraction Display detailed CLI API usage instructions dotnet wan24AutoDiscover.dll help -details Login name mapping If the login name isn't the email address or the alias of the given email address, you can create a login name mapping per domain and/or protocol, by defining a mapping from the email address or alias to the login name. During lookup the protocol mapping and then the domain mapping will be used by trying the email address and then the alias as key. Automatic email address to login user mapping with Postfix If your Postfix virtual email mappings are stored in a hash text file, you can create an email mapping from is using dotnet wan24AutoDiscover.dll autodiscover postfix < /etc/postfix/virtual > /home/autodiscover/postfix.json Then you can add the postix.json to your appsettings.json: { ... \"DiscoveryConfig\": { ... \"EmailMappings\": \"/home/autodiscover/postfix.json\", ... } } The configuration will be reloaded, if the postfix.json file changed, so be sure to re-create the postfix.json file as soon as the virtual file was changed. If you don't want that, set WatchEmailMappings to false. Additionally watched files You can set a list of additionally watched file paths to WatchFiles in your appsettings.json file. When any file was changed, the configuration will be reloaded. Pre-reload command execution To execute a command before reloading a changed configration, set the PreReloadCommand value in your appsettings.json like this: { ... \"DiscoveryConfig\": { ... \"PreReloadCommand\": [\"/command/to/execute\", \"argument1\", \"argument2\", ...], ... } } Automatic online upgrades You can upgrade wan24-AutoDiscover online and automatic. For this some steps are recommended: Create sheduled task for auto-upgrade (daily, for example) Stop the service before installing the newer version Start the service after installing the newer version The sheduled auto-upgrade task should execute this command on a Debian Linux server, for example: dotnet /home/autodiscover/wan24AutoDiscover.dll autodiscover upgrade -noUserInteraction --preCommand systemctl stop autodiscover --postCommand systemctl start autodiscover If the upgrade download failed, nothing will happen - the upgrade won't be installed only and being re-tried at the next sheduled auto-upgrade time. If the upgrade installation failed, the post-upgrade command won't be executed, and the autodiscover service won't run. This'll give you the chance to investigate the broken upgrade and optional restore the running version manually. CAUTION: The auto-upgrade is being performed using the GitHub repository. There are no security checks at present - so if the repository was hacked, you could end up with upgrading to a compromised software which could harm your system! The upgrade setup should be done in less than a second, if everything was fine. Manual upgrade Download the latest release ZIP file from GitHub Extract the ZIP file to a temporary folder Stop the autodiscover service, if running Create a backup of your current installation Copy all extracted files/folders excluding appsettings.json to your installation folder Remove files/folders that are no longer required and perform additional upgrade steps, which are required for the new release (see upgrade instructions) Start the autodiscover service Delete the previously created backup and the temporary folder These steps are being executed during an automatic upgrade like described above also."
  }
}